{"version":3,"sources":["assets/css/_animations.styl","node_modules/axis/node_modules/nib/lib/nib/vendor.styl","node_modules/axis/axis/reset.styl","node_modules/axis/node_modules/nib/lib/nib/flex.styl","node_modules/axis/node_modules/nib/lib/nib/border.styl","node_modules/axis/node_modules/nib/lib/nib/overflow.styl","node_modules/axis/axis/typography.styl","assets/css/global.styl","node_modules/rupture/rupture/index.styl","assets/css/_header.styl","node_modules/axis/node_modules/nib/lib/nib/positions.styl","node_modules/axis/node_modules/nib/lib/nib/size.styl","node_modules/axis/axis/vendor.styl","assets/css/_settings.styl","node_modules/axis/node_modules/nib/lib/nib/clearfix.styl","assets/css/_footer.styl"],"names":[],"mappings":"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","sourcesContent":["_animated(duration=1s)\n  animation-duration: duration\n  animation-fill-mode: both\n\n_infinite()\n  animation-iteration-count: infinite\n\nbounce_distance = 15px\n\nbounce(duration=1s, delay=false, function=ease-in-out)\n  _animated(duration)\n  _infinite()\n  animation-name: delay ? bounceWithDelay : bounce\n  transform-origin: center bottom\n  animation-timing-function: function\n\n@keyframes bounce\n  0%, 100%\n    transform: translate3d(0, 0, 0)\n  50%\n    transform: translate3d(0, bounce_distance, 0)\n\n@keyframes bounceWithDelay\n  0%, 50%, 100%\n    transform: translate3d(0, 0, 0)\n  25%\n    transform: translate3d(0, bounce_distance, 0)","use('../nodes/vendor-helpers.js')\n@import 'config'\n\n/*\n * Alias \"nowrap\" as \"no-wrap\".\n */\n\nno-wrap = unquote('nowrap')\n\n/*\n * Helper to find out if a given value is a width\n */\n\nis-width(val)\n  if auto == val\n    return true\n  else if val && 'unit' == type(val)\n    // Stylus does not short circuit so we need to perform this as a distinct\n    // operation to prevent errors\n    return '' != unit(val)\n  return false\n\n/*\n * Vendor support for the given prop / arguments, optionally specifying the\n * only prefixes to utilize, or those which should be ignored.\n */\n\nvendor(prop, args, only = null, ignore = null, vendor-property = true)\n  need_normalize = !vendor-property or prop in ('transition' 'transition-property' 'border-image' 'border-image-slice')\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore)\n      if official == prefix\n        if need_normalize\n          {prop}: normalize(prop,('%s' % args))\n        else\n          {prop}: args\n      else\n        newprop = prop\n        newprop = '-' + prefix + '-' + prop if vendor-property\n\n        if need_normalize\n          {newprop}: normalize(prop,('%s' % args),prefix)\n        else\n          {newprop}: args\n/*\n * Vendorize the given value.\n */\n\nvendor-value(arg, only = null, ignore = null)\n  prop = current-property[0]\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore) or official == prefix\n      add-property(prop, '-%s-%s' % (prefix arg))\n  arg\n\n/*\n * Vendor \"box-shadow\" support.\n */\n\nbox-shadow()\n  vendor('box-shadow', arguments, only: webkit official)\n\n/*\n * Vendor \"user-select\" support.\n */\n\nuser-select()\n  vendor('user-select', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"column-count\" support.\n */\n\ncolumn-count()\n  vendor('column-count', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-gap\" support.\n */\n\ncolumn-gap()\n  vendor('column-gap', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule\" support.\n */\n\ncolumn-rule()\n  vendor('column-rule', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-color\" support.\n */\n\ncolumn-rule-color()\n  vendor('column-rule-color', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-width\" support.\n */\n\ncolumn-rule-width()\n  vendor('column-rule-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-style\" support.\n */\n\ncolumn-rule-style()\n  vendor('column-rule-style', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-width\" support.\n */\n\ncolumn-width()\n  vendor('column-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-span\" support.\n */\n\ncolumn-span()\n  vendor('column-span', arguments, only: webkit official)\n\n/*\n * Vendor \"column-fill\" support.\n */\n\ncolumn-fill()\n  vendor('column-fill', arguments, only: moz)\n\n/*\n * Legacy syntax support for background-clip and background-origin\n */\n\nlegacy-bg-values(property, args)\n  legacy_args = ()\n  importance = unquote('')\n  for subargs in args\n    for arg in subargs\n      if arg in (border-box padding-box content-box)\n        arg = unquote('border')  if arg == border-box\n        arg = unquote('padding') if arg == padding-box\n        arg = unquote('content') if arg == content-box\n      if arg != '!important'\n        push(legacy_args,arg)\n      else\n        importance = !important\n  vendor(property, unquote(join(', ',legacy_args)) importance, only: moz webkit)\n\n/*\n * Vendor \"background-clip\" support.\n */\n\nbackground-clip()\n  if arguments[0] == text\n    vendor('background-clip', arguments, only: webkit)\n  else\n    legacy-bg-values('background-clip', arguments)\n    background-clip: arguments\n\n/*\n * Vendor \"background-origin\" support.\n */\n\nbackground-origin()\n  legacy-bg-values('background-origin', arguments)\n  background-origin: arguments\n\n/*\n * Vendor \"background-size\" support.\n */\n\nbackground-size()\n  vendor('background-size', arguments, only: webkit moz official)\n\n/*\n * Vendor \"transform\" support.\n */\n\ntransform()\n  vendor('transform', arguments)\n\n/*\n * Vendor \"transform-origin\" support.\n */\ntransform-origin()\n    vendor('transform-origin', arguments)\n\n/*\n * Vendor \"transform-style\" support.\n */\n\ntransform-style()\n  vendor('transform-style', arguments)\n\n/*\n * Vendor \"border-image\" support.\n */\n\nborder-image()\n  vendor('border-image', arguments, only: webkit moz o official)\n\n/*\n * Vendor \"transition\" support.\n */\n\ntransition()\n  vendor('transition', arguments)\n\n/*\n * Vendor \"transition-property\" support.\n */\n\ntransition-property()\n  vendor('transition-property', arguments)\n\n/*\n * Vendor \"transition-duration\" support.\n */\n\ntransition-duration()\n  vendor('transition-duration', arguments)\n\n/*\n * Vendor \"transition-timing-function\" support.\n */\n\ntransition-timing-function()\n  vendor('transition-timing-function', arguments)\n\n/*\n * Vendor \"transition-delay\" support.\n */\n\ntransition-delay()\n  vendor('transition-delay', arguments)\n\n/*\n * Vendor \"backface-visibility\" support.\n */\n\nbackface-visibility()\n  vendor('backface-visibility', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"perspective\" support.\n */\n\nperspective()\n  if mixin\n    vendor('perspective', arguments, only: webkit moz ms official)\n  else\n    'perspective(%s)' % arguments\n\n/*\n * Vendor \"perspective-origin\" support.\n */\n\nperspective-origin()\n  vendor('perspective-origin', arguments, only: webkit moz ms official)\n\n/*\n * Opacity with conditional IE support.\n */\n\nopacity(n, args...)\n  opacity: n args\n  if support-for-ie\n    if n == inherit or n == initial\n      -ms-filter: n args\n      filter: n args\n    else\n      val = round(n * 100)\n      if val == 100\n        -ms-filter: none args\n        filter: none args\n      else\n        -ms-filter: '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\"' % val args\n        filter: 'alpha(opacity=%s)' % val args\n\n/*\n * Vendor \"text-size-adjust\"\n */\n\ntext-size-adjust()\n  vendor('text-size-adjust', arguments)\n\n/*\n * Alias the \"white-space\" property.\n */\n\nwhitespace()\n  white-space: arguments\n\n/*\n * Vendor \"box-sizing\" support.\n */\n\nbox-sizing()\n  vendor('box-sizing', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-orient\" support.\n */\n\nbox-orient()\n  vendor('box-orient', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-flex-group\" support.\n */\n\nbox-flex-group()\n  vendor('box-flex-group', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-ordinal-group\" support.\n */\n\nbox-ordinal-group()\n  vendor('box-ordinal-group', arguments, only: webkit moz ms official)\n\n\n/*\n * Vendor \"box-align\" support.\n */\n\nbox-align()\n  vendor('box-align', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-pack\" support.\n */\n\nbox-pack()\n  vendor('box-pack', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-direction\" support.\n */\n\nbox-direction()\n  vendor('box-direction', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"animation\" support.\n */\n\nanimation()\n  vendor('animation', arguments)\n\n\n/*\n * Vendor \"animation-name\" support.\n */\n\nanimation-name()\n  vendor('animation-name', arguments)\n\n/*\n * Vendor \"animation-duration\" support.\n */\n\nanimation-duration()\n  vendor('animation-duration', arguments)\n\n/*\n * Vendor \"animation-delay\" support.\n */\n\nanimation-delay()\n  vendor('animation-delay', arguments)\n\n/*\n * Vendor \"animation-direction\" support.\n */\n\nanimation-direction()\n  vendor('animation-direction', arguments)\n\n/*\n * Vendor \"animation-iteration-count\" support.\n */\n\nanimation-iteration-count()\n  vendor('animation-iteration-count', arguments)\n\n/*\n * Vendor \"animation-timing-function\" support.\n */\n\nanimation-timing-function()\n  vendor('animation-timing-function', arguments)\n\n/*\n * Vendor \"animation-play-state\" support.\n */\n\nanimation-play-state()\n  vendor('animation-play-state', arguments)\n\n/*\n * Vendor \"animation-fill-mode\" support.\n */\n\nanimation-fill-mode()\n  vendor('animation-fill-mode', arguments)\n\n/*\n * Vendor \"hyphens\" support.\n */\n\nhyphens()\n  vendor('hyphens', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"appearance\" support.\n */\n\nappearance()\n  vendor('appearance', arguments, only: webkit moz official)\n\n/*\n * Vendor \"tab-size\" support.\n */\n\ntab-size()\n  vendor('tab-size', arguments, only: moz o official)\n\n/*\n * Vendor \"overflow-scrolling\" support.\n */\n\noverflow-scrolling()\n  vendor('overflow-scrolling', arguments, only: webkit official)\n\n/*\n * Vendor \"text-overflow\" support, , -o- for opera 9.* - 10.*\n */\n\ntext-overflow()\n  vendor('text-overflow', arguments, only: official o)\n\n/*\n * Vendor \"text-size-adjust\" support.\n */\ntext-size-adjust()\n  vendor('text-size-adjust', arguments, only: official webkit ms)\n\n/*\n * Vendor \"font-smoothing\" support, webkit only.\n */\nfont-smoothing()\n  vendor('font-smoothing', arguments, only: webkit)\n\n/*\n * Helper for border-radius().\n */\n\n-apply-border-radius(pos, importance)\n  if length(pos) == 3\n    // border-radius: <top | buttom> <left | right> <n>\n    y = pos[0]\n    x = pos[1]\n    // We don't use moz for simple boder-radius anymore\n    // vendor('border-radius-%s%s' % pos, pos[2], only: moz)\n    vendor('border-%s-%s-radius' % pos, pos[2] importance, only: webkit official)\n  else if pos[0] in (top bottom)\n    // border-radius: <top | bottom> <n>\n    -apply-border-radius(pos[0] left pos[1], importance)\n    -apply-border-radius(pos[0] right pos[1], importance)\n  else if pos[0] in (left right)\n    // border-radius: <left | right> <n>\n    unshift(pos, top);\n    -apply-border-radius(pos, importance)\n    pos[0] = bottom\n    -apply-border-radius(pos, importance)\n\n/*\n * border-radius supporting vendor prefixes and\n * augmented behavior.\n *\n * Examples:\n *\n *    border-radius: 2px 5px\n *    border-radius: top 5px bottom 10px\n *    border-radius: left 5px\n *    border-radius: top left 5px\n *    border-radius: top left 10px bottom right 5px\n *    border-radius: top left 10px, bottom right 5px\n *\n */\n\nborder-radius()\n  pos = ()\n  augmented = false\n  importance = arguments[length(arguments) - 1] == !important ? !important : unquote('')\n\n  for args in arguments\n    for arg in args\n      if arg is a 'ident'\n        append(pos, arg)\n        augmented = true\n      else\n        append(pos, arg)\n        if augmented\n          -apply-border-radius(pos, importance)\n          pos = ()\n  vendor('border-radius', pos, only: webkit official) unless augmented\n\n/**\n * Vendor input-placeholder/placeholder support.\n *\n * Examples:\n *    // Default syntax\n *    body\n *      placeholder(color #333, font-weight normal)\n *\n *    // The comma is important\n *    .placeholder-red\n *      placeholder(color red,)\n *\n *    // We can pass a function\n *    green-placeholder()\n *      color green\n *    .placeholder-green\n *      placeholder(green-placeholder)\n *\n *    // We can pass a hash\n *    textarea\n *      placeholder((font-style italic) (font-weight bold) (padding '4px 10px'))\n */\nplaceholder()\n  for v in ':-webkit-input' '-moz' ':-moz' '-ms-input'\n    &:{v}-placeholder\n      for pair in arguments\n        if typeof(pair) == 'function'\n          pair()\n        else if pair is not null && pair[0] is not null\n          {pair[0]}: type(pair[1]) == 'string' ? s(pair[1]) : pair[1]\ninput-placeholder = placeholder\n\n/*\n * Vendor background support (gradients).\n */\n\nbackground()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background', arguments, vendor-property: false)\n  else\n    background arguments\n\nbackground-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background-image', arguments, vendor-property: false)\n  else\n    background-image arguments\n\ncursor()\n  if match('-gradient\\(', ''+arguments)\n    vendor('cursor', arguments, vendor-property: false)\n  else\n    cursor arguments\n\nlist-style()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style', arguments, vendor-property: false)\n  else\n    list-style arguments\n\nlist-style-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style-image', arguments, vendor-property: false)\n  else\n    list-style-image arguments\n","// -----\n// Reset\n// -----\n\n// global-reset delegated to nib\n\nsupport-for-ie ?= true\n\n// Mixin: Normalize CSS\n// Based on v3.0.1 https://github.com/necolas/normalize.css\n\nnormalize-css()\n  html\n    font-family: sans-serif\n    -ms-text-size-adjust: 100%\n    -webkit-text-size-adjust: 100%\n\n  body\n    margin: 0\n\n  article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary\n    display: block\n\n  audio, canvas, progress, video\n    display: inline-block\n    vertical-align: baseline\n\n  audio:not([controls])\n    display: none\n    height: 0\n\n  [hidden], template\n    display: none\n\n  a\n    background: transparent\n\n    &:active, &:hover\n      outline: 0\n\n  abbr[title]\n    border-bottom: 1px dotted\n\n  b, strong\n    font-weight: bold\n\n  dfn\n    font-style: italic\n\n  h1\n    font-size: 2em\n    margin: 0.67em 0\n\n  mark\n    background: #ff0\n    color: #000\n\n  small\n    font-size: 80%\n\n  sub, sup\n    font-size: 75%\n    line-height: 0\n    position: relative\n    vertical-align: baseline\n\n  sup\n    top: -0.5em\n\n  sub\n    bottom: -0.25em\n\n  img\n    border: 0\n\n  svg:not(:root)\n    overflow: hidden\n\n  figure\n    margin: 1em 40px\n\n  hr\n    -moz-box-sizing: content-box\n    box-sizing: content-box\n    height: 0\n\n  pre\n    overflow: auto\n\n  code, kbd, pre, samp\n    font-family: monospace, monospace\n    font-size: 1em\n\n  button, input, optgroup, select, textarea\n    color: inherit\n    font: inherit\n    margin: 0\n\n  button\n    overflow: visible\n\n  button, select\n    text-transform: none\n\n  button, html input[type=\"button\"], input[type=\"reset\"], input[type=\"submit\"]\n    -webkit-appearance: button\n    cursor: pointer\n\n  button[disabled], html input[disabled]\n    cursor: default\n\n  button::-moz-focus-inner, input::-moz-focus-inner\n    border: 0\n    padding: 0\n\n  input\n    line-height: normal\n\n  input[type=\"checkbox\"], input[type=\"radio\"]\n    box-sizing: border-box\n    padding: 0\n\n  input[type=\"number\"]::-webkit-inner-spin-button, input[type=\"number\"]::-webkit-outer-spin-button\n    height: auto\n\n  input[type=\"search\"]\n    -webkit-appearance: textfield\n    -moz-box-sizing: content-box\n    -webkit-box-sizing: content-box\n    box-sizing: content-box\n\n  input[type=\"search\"]::-webkit-search-cancel-button, input[type=\"search\"]::-webkit-search-decoration\n    -webkit-appearance: none\n\n  fieldset\n    border: 1px solid #c0c0c0\n    margin: 0 2px\n    padding: 0.35em 0.625em 0.75em\n\n  legend\n    border: 0\n    padding: 0\n\n  textarea\n    overflow: auto\n\n  optgroup\n    font-weight: bold\n\n  table\n    border-collapse: collapse\n    border-spacing: 0\n\n  td, th\n    padding: 0\n\n// Mixin: Fluid Media\n// Makes your img, video, and iframe tags responsive to their parent container.\n\nfluid-media()\n  img,\n  video,\n  iframe\n    max-width: 100%\n    height: auto\n    border: 0\n    -ms-interpolation-mode: bicubic\n    display: block\n\n// Mixin: Border Box HTML\n// Add border box to every element in your project. Used in your project root.\n// http://www.paulirish.com/2012/box-sizing-border-box-ftw/\n\nborder-box-html()\n  html\n    box-sizing: border-box\n\n  *,\n  *:before,\n  *:after\n    box-sizing: inherit\n    \n// Mixin: Print Styles\n// Nice clean print styles so you don't have to worry about it.\n\nprint-styles()\n  @media print\n    body\n      width: 100% !important\n      margin: 0 !important\n      padding: 0 !important\n      font-size: 14pt\n      line-height: 1.45\n      font-family: Garamond, \"Times New Roman\", serif\n      color: #000\n      background: none\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6\n      page-break-after: avoid\n      font-family: \"Helvetica\", Arial, sans-serif\n\n    h1\n      font-size: 36pt\n      line-height: 1.25em\n\n    h2\n      font-size: 24pt\n      line-height: 1.25em\n\n    h3\n      font-size: 18pt\n      line-height: 1.25em\n\n    h4,\n    h5,\n    h6\n      font-size: 14pt\n      line-height: 1.25em\n\n    p,\n    h2,\n    h3\n      orphans: 3\n      widows: 3\n\n    code\n      font: 12pt Courier, monospace\n\n    blockquote\n      margin: 1.2em\n      padding: 1em\n      font-size: 24pt\n      line-height: 1.45833333em\n      font-style: italic\n\n    hr\n      background-color: #ccc\n\n    img\n      float: left\n      margin: 1em 1.5em 1.5em 0\n      max-width: 100% !important\n\n    a img\n        border: none\n\n    a:link,\n    a:visited\n      background: transparent\n      font-weight: 700\n      text-decoration: underline\n      color: #333\n\n    a:link[href^=\"http://\"]:after,\n    a[href^=\"http://\"]:visited:after\n      content: \" (\" attr(href) \") \"\n      font-size: 90%\n\n    abbr[title]:after\n      content: \" (\" attr(title) \")\"\n\n    a[href^=\"http://\"]\n      color: #000\n\n    a[href$=\".jpg\"]:after,\n    a[href$=\".jpeg\"]:after,\n    a[href$=\".gif\"]:after,\n    a[href$=\".png\"]:after\n      content: \" (\" attr(href) \") \"\n      display: none\n\n    a[href^=\"#\"]:after, a[href^=\"javascript:\"]:after\n      content: \"\"\n\n    table\n      margin: 1px\n      text-align: left\n\n    th\n      border-bottom: 1px solid #333\n      font-weight: bold\n\n    td\n      border-bottom: 1px solid #333\n\n    th,\n    td\n      padding: 4px 10px 4px 0\n\n    tfoot\n      font-style: italic\n\n    caption\n      background: #fff\n      margin-bottom: 2em\n      text-align: left\n\n    thead\n      display: table-header-group\n\n    img,\n    tr\n      page-break-inside: avoid\n","/*\n * Vendor \"display: flex\" support with fallback to obsolete versions.\n */\n\nflex-version ?= box flex\n\n//\n// 1. Display values\n//    - http://www.w3.org/TR/css3-flexbox/#flex-containers\n//\ndisplay(type, args...)\n  if flex == type || inline-flex == type\n    if box in flex-version\n      if flex == type\n        display: -ms-flexbox args\n        display: vendor-value(box args, only: moz webkit)\n      else\n        display: -ms-inline-flexbox args\n        display: vendor-value(inline-box args, only: moz webkit)\n    if flex in flex-version\n      display: vendor-value(arguments, only: webkit official) // overwrites old webkit\n  else\n    display: arguments\n\n/*\n * New syntax for browsers like Google Chrome.\n * Plus a translation to the old syntax, if possible.\n */\n\n\n//\n// 5. Ordering and Orientation\n//    - http://www.w3.org/TR/css3-flexbox/#ordering-and-orientation\n//\n-flex-obsolete-direction(direction)\n  if box in flex-version\n    if row-reverse == direction || column-reverse == direction\n      vendor('box-direction', reverse, ignore: ms official)\n\n    if row == direction || row-reverse == direction\n      vendor('box-orient', horizontal, ignore: ms official)\n    else if column == direction || column-reverse == direction\n      vendor('box-orient', vertical, ignore: ms official)\n\n-flex-obsolete-wrap(value)\n  if box in flex-version\n    // WARN: wrap-reverse does not have a box equivalent. This will render in different manners\n    //    on box vs. flex values.\n    if 'wrap' == value || wrap-reverse == value\n      vendor('box-lines', multiple, ignore: ms official)\n    else if nowrap == value\n      vendor('box-lines', single, ignore: ms official)\n\nflex-direction(direction)\n  // obsolete\n  -flex-obsolete-direction(direction)\n\n  // new\n  if flex in flex-version\n    vendor('flex-direction', arguments, only: webkit ms official)\n\nflex-wrap(value)\n  // obsolete\n  -flex-obsolete-wrap(value)\n\n  if flex in flex-version\n    vendor('flex-wrap', arguments, only: webkit ms official)\n\nflex-flow()\n  // obsolete\n  -flex-obsolete-direction(arguments[0])\n  -flex-obsolete-direction(arguments[1])\n  -flex-obsolete-wrap(arguments[0])\n  -flex-obsolete-wrap(arguments[1])\n\n  // new\n  if flex in flex-version\n    vendor('flex-flow', arguments, only: webkit ms official)\n\n\norder()\n  // obsolete\n  if box in flex-version\n    vendor('box-ordinal-group', arguments, ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-order', arguments, only: ms)\n    vendor('order', arguments, only: webkit official)\n\n\n//\n// 7. Flexibility\n//    - http://www.w3.org/TR/css3-flexbox/#flexibility\n//\nflex-grow(growth)\n  // obsolete\n  if box in flex-version\n    vendor('box-flex', growth)\n\n  // new\n  if flex in flex-version\n    vendor('flex-grow', arguments, only: webkit official)\n\nflex-basis()\n  if flex in flex-version\n    vendor('flex-basis', arguments, only: webkit official)\n\nflex-shrink()\n  if flex in flex-version\n    vendor('flex-shrink', arguments, only: webkit official)\n\nflex(growth)\n\n  // obsolete\n  if box in flex-version\n    shrink = 1\n\n    if none == growth || initial == growth\n      // Well known values\n      shrink = 0 if none == growth\n      growth = 0\n    else if is-width(growth) == true\n      // Basis is defined as the first parameter\n      growth = arguments[1] || 0\n      shrink = arguments[2] if 3 <= length(arguments)\n    else if arguments[1] && is-width(arguments[1]) == false\n      // Growth is first and shrink is second\n      shrink = arguments[1]\n\n    // Since we can't make the distinction between growing and shrinking in the box model, take\n    // the one that provides the most flexibility.\n    vendor('box-flex', max(growth, shrink), ignore: ms)\n\n  // new\n  if flex in flex-version\n    vendor('flex', arguments, only: webkit ms official)\n\n\n// converts the justification alignment\n-convert-justify(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else if space-around == align\n    return distribute\n  else if space-between == align\n    return justify\n  else\n    return align\n\n//\n// 8. Alignment\n//    - http://www.w3.org/TR/css3-flexbox/#alignment\n//\njustify-content(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-pack', -convert-justify(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-pack', -convert-justify(align), only: ms)\n    vendor('justify-content', align, only: webkit official)\n\nalign-content(align)\n  // WARN: Obsolete spec does not allow for adjustment here\n  if flex in flex-version\n    vendor('flex-line-pack', -convert-justify(align), only: ms)\n    vendor('align-content', align, only: webkit official)\n\n// converts alignment from 'flex' to normal value\n-convert-alignment(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else\n    return align\n\nalign-items(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-align', -convert-alignment(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-align', -convert-alignment(align), only: ms)\n    vendor('align-items', arguments, only: webkit official)\n\nalign-self(align)\n  // WARN: Obsolete spec does not allow for overriding alignment on individual items.\n  if flex in flex-version\n    vendor('align-self', align, only: webkit official)\n    vendor('flex-item-align', -convert-alignment(align), only: ms)\n","/*\n * border: <color>\n * border: ...\n */\n\nborder(color, args...)\n  if color is a 'color'\n    border: 1px solid color args\n  else\n    border: arguments\n","/*\n * Overflow utility. Maps to regular overflow, and adds an ellipsis value.\n *\n * Synopsis:\n *\n *   overflow: <type>\n *\n * Examples:\n *\n *     overflow: auto\n *     overflow: hidden\n *     overflow: ellipsis\n *\n */\n\noverflow()\n  if arguments[0] == ellipsis\n    ellipsis()\n  else\n    overflow: arguments\n","// ----------\n// Typography\n// ----------\n\n// Alias: Bold\n// It's just faster to type bold() than font-weight: bold\n\nbold()\n  font-weight: bold\n\n// Alias: Italic\n// It's just faster to type italic() than font-style: italic\n\nitalic()\n  font-style: italic\n\n// Alias: Normal\n// Put the font-weight and style back to normal\n\nnormal()\n  font-weight: normal\n  font-style: normal\n\n// Mixin: Raquo\n//\n// Because technically raquo is not semantic, it's better to add it like this.\n//\n// ex. raquo()\n\nraquo()\n  &:after\n    content: \" \\00BB\"\n\n// Mixin: Font Face\n//\n// Super simple font-face declaration. Just give the name and the folder it\n// lives in. Make sure the font name matches the name of the files. Uses the\n// fontspring syntax:\n// http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax\n//\n// ex. font-face(proxima-nova, '/fonts')\n\nfont-face(name, folder, weight='normal', style='normal')\n  @font-face\n    font-family: name\n    src: url(folder unquote('/') name unquote('.eot') '?#iefix') format('embedded-opentype'), url(folder unquote('/') name unquote('.woff')) format('woff'), url(folder unquote('/') name unquote('.ttf')) format('truetype'), url(folder unquote('/') name unquote('.eot') unquote('#') name) format('svg');\n    font-weight: unquote(weight)\n    font-style: unquote(style)\n\n// Function: Line Height\n//\n// If there is a font-size set on the parent element, adjusts the line height to\n// match that. If not, it uses the base font-size to calculate the line-height.\n\n-line-height()\n  if @font-size\n    line-height: 1.6em\n  else\n    line-height: unit(font-size*1.6, 'px')\n    line-height: 1.6rem\n\n// Mixin: Text Margin\n//\n// Puts nice visually pleasing top and bottom margins on a paragraph of text.\n// Put a font-size on your element to have it adjust accordingly.\n//\n// ex. p\n//       font-size: 18px\n//       text-margin()\n\ntext-margin(size=font-size)\n  if @font-size\n    margin: .75em 0\n  else\n    margin: unit(font-size*.75, 'px') 0\n\n// Mixin: Paragraph\n//\n// Sets a nice size, line-height, and margins on a paragraph of text. Pass a\n// size in to customize. Toggle margins off if you don't want them.\n//\n// ex. p()\n// ex. p: 18px\n// ex. p: 14px false\n\np(size=1rem, margins = true)\n  font-size: size\n  text-margin() if margins\n  -line-height()\n  openTypeLigatures() if ligatures\n\n// Alias: paragraph\nparagraph = p\n\n// Alias: Font Size\n// An alias for 'font-size' with auto-fallback for rem.\n// ex. fs: 16px\n// ex. fs: 1.2rem\n\nfs(size)\n  if (unit(size) == 'rem')\n    font-size: round(unit((font-size*size), 'px'))\n    font-size: size\n  else\n    font-size: size\n\n// Alias: Uppercase\n// An alias for 'text-transform: uppercase'\n// ex. uppercase()\n\nuppercase()\n  text-transform: uppercase\n\n// Alias: Upcase\nupcase = uppercase\n\n// Alias: Lowercase\n// An alias for 'text-transform: lowercase'\n// ex. lowercase()\n\nlowercase()\n  text-transform: lowercase\n\n// Alias: Downcase\ndowncase = lowercase\n\n// Alias: Reset Case\n// Gets rid of an text transform\n// ex. reset-case()\n\nreset-case()\n  text-transform: none\n\n// Mixin: Small\n//\n// Makes your text smaller and a little lighter. Great on <small /> tags.\n//\n// ex. small()\n\nsmall()\n  font-size: 55%\n  opacity: .6\n  font-weight: normal\n\n// Function: Heading\n// For internal use within headings\n\n-heading(multiplier)\n  font-size: unit((font-size*multiplier), 'px')\n  font-size: unit(multiplier, 'rem')\n  text-rendering: optimizelegibility\n  font-weight: bold\n  text-margin()\n  -line-height()\n  openTypeLigatures() if ligatures\n\n// Mixin Set: h1, h2, h3, h4, h5, h6\n//\n// These provide nice defaults for headings based off the default font size.\n// The can scale infinitely, and work best when matched to their corresponding\n// html elements. If you'd like to change the base size of a header, just pass\n// it as an option.\n//\n// ex. h3()\n// ex. h3: 3.5\n\nh1(size=2.4)\n  -heading(size)\n\nh2(size=1.8)\n  -heading(size)\n\nh3(size=1.5)\n  -heading(size)\n\nh4(size=1.3)\n  -heading(size)\n\nh5(size=1.0)\n  -heading(size)\n\nh6(size=0.9)\n  -heading(size)\n  upcase()\n\n// Mixin: Link\n//\n// A nice default style for links. Accepts a color and a style. Color can be\n// anything, style can be underline, darken, lighten, or glow, each giving it a\n// different style of interaction when hovered. More suggestions here welcome.\n//\n// ex. link()\n// ex. link: green\n// ex. link: #57777E 'glow'\n\nlink(color=blue, style='underline')\n  color: color\n  text-decoration: none\n  transition()\n\n  if style == 'underline'\n    hover-underline()\n    &:hover\n      color: darken(@color, 15%)\n  else if style == 'darken'\n    &:hover\n      color: darken(@color, 20%)\n  else if style == 'lighten'\n    hover-lighten()\n  else if style == 'glow'\n    &:hover\n      text-shadow: 0 0 7px rgba(color, .6)\n\n  &:visited\n    opacity: .8\n\n// Mixin: Reset Link\n//\n// Sometimes my link mixin of the browser defaults will give you questionable\n// link defaults that you don't want on certain elements. This guy gets rid of\n// that.\n\n// ex. reset-link()\n\nreset-link()\n  border: none\n  text-decoration: none\n  color: initial\n\n  &:hover\n    border: none\n    text-decoration: none\n    color: initial\n\n  &:visited\n    opacity: 1\n\n// Mixin: Text Selection\n//\n// This guy sets the text select color intelligently based on the\n// highlight-color variable found in the settings file. If you really want, you\n// can pass it a color override too.\n\n// ex. text-selection()\n\ntext-selection(color=highlight-color, textColor=null)\n  textColor = (light(color) ? white : #494949) unless textColor\n\n  &::-moz-selection\n    background: color\n    color: textColor\n\n  &::selection\n    background: color\n    color: textColor\n\n// Mixin: Ul\n//\n// A nice default for list styles. More or less the same as browser defaults,\n// scales nicely. You can pass it any style that list-style-type would normally\n// take. Defaults to disc. Use this on a ul element por favor.\n//\n// ex. ul()\n// ex. ul: 'square'\n\nul(style='disc')\n  margin: 5px 15px\n  margin: 0.32rem 0.94rem\n  padding-left: 1rem\n\n  li\n    list-style-type: unquote(style)\n    padding: 2px 0\n    padding: 0.125rem\n\n// Mixin: Ol\n//\n// A nice default for list styles. More or less the same as browser defaults,\n// scales nicely. You can pass it any style that list-style-type would normally\n// take. Defaults to decimal. Use this on a ol element por favor.\n//\n// ex. ol()\n// ex. ol: 'upper-roman'\n\nol(style='decimal')\n  margin: 5px 18px\n  margin: 0.32rem 1.125rem\n  padding-left: 1rem\n\n  li\n    list-style-type: unquote(style)\n    padding: 2px 0\n    padding: 0.125rem\n\n// Mixin: Inline List\n//\n// For when you need your list to be horizontal. Pass it the spacing you want\n// between list elements, whatever units you'd like. Defaults to 20px.\n//\n// ex. inline-list()\n// ex. inline-list: 15px\n\ninline-list(spacing=20px)\n  group()\n  margin: 0\n  padding: 0\n\n  li\n    float: left\n    margin-right: spacing\n    list-style-type: none\n\n  li:last-child\n    margin-right: 0\n\n// Mixin: Reset List\n//\n// If you're tired of all the list shenanigans and want to get rid of them for\n// this special list you're working on, this is your guy. Resets the margins,\n// padding, and style.\n//\n// ex. reset-list()\n\nreset-list()\n  margin: 0\n  padding: 0\n\n  li\n    float: none\n    list-style-type: none\n    padding: 0\n    margin: 0\n\n// Mixin: Blockquote\n//\n// Nice styles for a blockquote, and even puts a nice hyphen in before your\n// citation. Use with a <p> and <cite>, <footer>, or <figcaption> inside for\n// best results. Pass a color or 'none' to set the left border.\n//\n// ex. blockquote()\n\nblockquote(color=blue)\n  border-left: 4px solid color\n  margin: 1em 0\n  padding-left: 1.5em\n  group()\n\n  > p\n    font-weight: 300\n    font-size: 127%\n    font-size: 1.27rem\n    line-height: 127%\n    line-height: 1.27rem\n    margin-top: 0\n\n  > cite, > footer, > figcaption\n    color: #888888\n    &:before\n      content: '\\2014'\n\n// Alias: blockquo\nblockquo = blockquote\n\n// Hyphenation\n//\n// Hyphenation is the better word-break. It’s locale aware, and inserts the\n// hyphen character at the correct place, when breaking the words. This is\n// especially important in responsive designs. It will save you from a lot of\n// ragged lines. And, no need anymore for clunky & slow Javascript hyphenation\n// fallbacks. Taken from http://www.newnet-soft.com/blog/csstypography\n//\n// ex. hyphenation()\n\nhyphenation()\n    -ms-word-break: break-all\n    word-break:     break-all\n    word-break:     break-word // webkit\n    hyphens: auto // none, auto, <number>\n    -webkit-hyphenate-before: 2\n    -webkit-hyphenate-after:  3\n    hyphenate-lines:          3\n\n// Additive Mixin: Base\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// This is an essential mixin. You want this on your page. Sets your font stack,\n// size, and colors based on the settings file and makes sure that your text is\n// a great looking as possible. You can override any of the params, but there is\n// really no reason to.\n//\n// ex. base()\n\nbase(fonts=font-stack, size=font-size, color=font-color)\n  html\n    font-size: unit(size, 'px')\n    font-size: unit((size/16)*100, \"%\")\n\n  body\n    font-family: fonts\n    color: color\n    -webkit-font-smoothing: antialiased\n    -webkit-text-size-adjust: 100%\n    -ms-text-size-adjust: 100%\n    font-size-adjust: auto\n\n// Additive Mixin: Headers\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds roots' wonderful scaling header styles to your <hx> tags.\n//\n// ex. headers()\n\nheaders()\n  h1\n    h1()\n\n  h2\n    h2()\n\n  h3\n    h3()\n\n  h4\n    h4()\n\n  h5\n    h5()\n\n  h6\n    h6()\n\n// Additive Mixin: Lists\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds roots' styles to ul and ols.\n//\n// ex. lists()\n\nlists()\n  ul\n    ul()\n  ol\n    ol()\n\n// Additive Mixin: Bold-Italic\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds bold and italic styles to the right tags if you did a global reset.\n//\n// ex. bold-italic()\n\nbold-italic()\n  b\n    bold()\n  i\n    italic()\n  strong\n    bold()\n  em\n    italic()\n\n// Additive Mixin: Typography\n//\n// WARNING: Creates classes in your css and styles them - not to be used inside\n// an element.\n//\n// Adds roots' styles to bold and italic elements, headers, paragrapgs, small\n// text, links, lists, and blockquotes. Got all your basic elements covered.\n//\n// ex. typography()\n\ntypography()\n  bold-italic()\n  headers()\n  lists()\n  text-selection()\n\n  p\n    paragraph()\n\n  small\n    small()\n\n  a\n    link()\n\n  blockquote\n    blockquo()\n\n  .hyphenation\n    hyphenation()\n","@import '_settings'\n@import '_animations'\n@import 'jeet'\n\nnormalize-css()\nbase()\n\na\n  color: #0e8eb5\n  text-decoration: none\n  outline: none\n\nfigure\n  margin: 0\n\n.page\n  margin-top: header-height\n.page-inner\n  padding: 0 45px\n  +between(546px, 860px)\n    padding: 0 30px\n  +below(545px)\n    padding: 0 20px\n\n@import '_header'\n\n@import '_footer'","base-font-size ?= 16px\nrasterise-media-queries ?= false\n\nrupture = {\n  rasterise-media-queries: rasterise-media-queries\n  mobile-cutoff: 400px\n  desktop-cutoff: 1050px\n  hd-cutoff: 1800px\n  enable-em-breakpoints: false\n  base-font-size: base-font-size\n  anti-overlap: false\n  density-queries: 'dppx' 'webkit' 'moz' 'dpi'\n  retina-density: 1.5\n  use-device-width: false\n}\nrupture.scale = 0 (rupture.mobile-cutoff) 600px 800px (rupture.desktop-cutoff) (rupture.hd-cutoff)\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl' 'hd'\n\n-is-string(val)\n  if typeof(val) is not 'unit'\n    if val is a 'string' or val is a 'ident'\n      true\n    else\n      false\n  else\n    false\n\n-get-scale-number(scale-name)\n  for list-item, i in rupture.scale-names\n    if list-item is scale-name\n      return i + 1\n  return false\n\n-convert-to(to-unit, value, context = rupture.base-font-size)\n  from-unit = unit(value)\n  return value if to-unit is from-unit\n  if to-unit in ('em' 'rem')\n    return value if from-unit in ('em' 'rem')\n    return unit((value / context), to-unit)\n  if to-unit is 'px'\n    return unit((value * context), 'px')\n\n-on-scale(n)\n  return unit(n) is ''\n\n-larger-than-scale(n)\n  return (n > (length(rupture.scale) - 1)) and -on-scale(n)\n\n-is-zero(n)\n  return n is 0\n\n-overlap-shift(anti-overlap, n)\n  shift-unit = unit(n)\n  anti-overlap = 0px unless anti-overlap\n  anti-overlap = 1px if anti-overlap is true\n  if length(anti-overlap) is 1\n    return -convert-to(shift-unit, anti-overlap)\n  for val in anti-overlap\n    return val if unit(val) is shift-unit\n\n-adjust-overlap(anti-overlap, n, side = 'min')\n  -shift = -overlap-shift(anti-overlap, n)\n  if (side is 'min' and -shift > 0) or (side is 'max' and -shift < 0)\n    n = n + -shift\n  return n\n\n-is-positive(n)\n  return n >= 0\n\n-density-queries(density)\n  if typeof(density) is not 'unit'\n    if not -is-string(density)\n      density = '%s' % density\n  density = rupture.retina-density if density is 'retina'\n  queries = ()\n  for query in rupture.density-queries\n    if query is 'webkit'\n      push(queries, '(-webkit-min-device-pixel-ratio: %s)' % (density))\n    else if query is 'moz'\n      push(queries, '(min--moz-device-pixel-ratio: %s)' % (density))\n    else if query is 'o'\n      push(queries, '(-o-min-device-pixel-ratio: %s/1)' % (density))\n    else if query is 'ratio'\n      push(queries, '(min-device-pixel-ratio: %s)' % (density))\n    else if query is 'dpi'\n      if -is-string(density)\n        density=convert(density)\n      push(queries, '(min-resolution: %sdpi)' % (round(density * 96, 1)))\n    else if query is 'dppx'\n      push(queries, '(min-resolution: %sdppx)' % (density))\n  return queries\n\ncreate-fallback-class(selected, class)\n  /{'' + class + ' ' + selected}\n    {block}\n\n// +between(min, max)\n// usage (scale can be mixed with custom values):\n//   - +between(1, 3) scale:scale\n//   - +between(0, 3) 0 width:scale\n//   - +between(200px, 500px) custom:custom\n//   - +between(0, 300px) 0 width:custom\n//   - +between(1, 300px) scale:custom\n//   - +between(200px, 4) custom:scale\n\nbetween(min, max, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  selected = selector()\n\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  if -is-string(min)\n    min = -get-scale-number(min)\n  if -is-string(max)\n    max = -get-scale-number(max)\n\n  -min = rupture.scale[min - 1] unless -is-zero(min) or (not -on-scale(min))\n  -max = rupture.scale[max] unless not -on-scale(max)\n  -min ?= min\n  -max ?= max\n\n  if (rupture.rasterise-media-queries)\n    if not (density or -max or orientation)\n      {block}\n  else\n    condition = 'only screen'\n    use-device-width = use-device-width ? 'device-' : ''\n    unless -min is 0\n      -min = -convert-to('em', -min) if rupture.enable-em-breakpoints\n      -min = -adjust-overlap(anti-overlap, -min, side: 'min')\n      condition = condition + ' and (min-' + use-device-width + 'width: %s)' % (-min)\n    unless -larger-than-scale(max)\n      -max = -convert-to('em', -max) if rupture.enable-em-breakpoints\n      -max = -adjust-overlap(anti-overlap, -max, side: 'max')\n      condition = condition + ' and (max-' + use-device-width + 'width: %s)' % (-max)\n    if orientation\n      condition = condition + ' and (orientation: %s)' % (orientation)\n    if density\n      conditions = ()\n      for query in -density-queries(density)\n        push(conditions, condition + ' and %s' % (query))\n      condition = join(', ', conditions)\n    @media condition\n      {block}\n  if fallback-class\n    +create-fallback-class(selected, fallback-class)\n      {block}\n\nat(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nfrom-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, length(rupture.scale), anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nabove = from-width\n\nto-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(1, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nbelow = to-width\n\nmobile(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +below(rupture.mobile-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ntablet(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(rupture.mobile-cutoff, rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndesktop(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nhd(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.hd-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndensity(density, orientation = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    conditions = ()\n    for query in -density-queries(density)\n      condition = 'only screen and %s' % (query)\n      if orientation\n        condition = condition + ' and (orientation: %s)' % (orientation)\n      push(conditions, condition)\n    condition = join(', ', conditions)\n    @media condition\n      {block}\n    if fallback-class\n      +create-fallback-class(selected, fallback-class)\n        {block}\n\npixel-ratio = density\n\nretina(orientation = null, fallback-class = null)\n  +density('retina', orientation, fallback-class)\n    {block}\n\nlandscape(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: landscape, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: landscape)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n\nportrait(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: portrait, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: portrait)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n","#header\n  fixed: top\n  color: #fff\n  width: 100%\n  z-index: 500\n  background-color: #000\n  border-bottom: 1px solid #FFF\n  height: header-height\n  \n  text-align: center\n  text-transform: uppercase\n  a\n    color: #fff\n\n  .share\n    absolute: left 20px\n    z-index: 600\n    \n    .share-btn\n      display: block\n      height: header-height\n      padding: 7px 5px 0\n      box-sizing: border-box\n      border: 1px solid #000\n      border-width: 1px 1px 0\n      box-sizing: border-box\n      color: #EEC142\n      font-size: 1.5em\n      &.expanded\n        border-color: #979797\n      span\n        display: block\n        size: 33px\n        line-height: 33px\n        border: 2px solid\n        border-radius: 33px\n\n    .share-ul\n      list-style: none\n      margin: 0\n      padding: 0\n      background-color: #000\n      overflow: hidden\n      border: 1px solid #979797\n      border-width: 0 1px 1px\n      box-sizing: border-box\n      position: absolute // TODO: improve\n      width: 100%\n      &.hidden\n        display: none\n      a\n        display: block\n        margin: 5px\n        padding: 3px 0\n        color: #FFF\n        font-size: 1.25em\n        transition: color 0.5s, border-color 0.5s\n        border: 2px solid #FFF\n        border-radius: 33px\n        &:hover\n          color: #EEC142\n          border-color: #EEC142\n\n  .logo\n    absolute: left 25%\n    size: 50% header-height\n    font-size: 1.6em\n    line-height: 2em\n    letter-spacing: 1px\n    a\n      display: block\n      size: 100%\n      max-width: 420px\n      margin: 0 auto\n      position: relative\n      double-border(6px, header-height+2, #FFF)\n\n  .menu\n    absolute: top right 20px\n    z-index: 600\n    \n    .menu-btn\n      display: block\n      padding: 0 10px\n      height: header-height\n      line-height: header-height\n      font-size: 1.25em\n      letter-spacing: 1px\n      .text\n        float: left\n      .icon\n        float: left\n        margin: (header-height - 30px) 0 0 20px\n      .bar\n        display: block\n        background-color: #FFF\n        width: 35px\n        height: 1px\n        & + .bar\n          margin-top: 5px\n\n  +below(625px)\n    text-align: left\n    overflow: hidden\n    \n    .share\n      display: none\n\n    .logo\n      position: static\n      display: inline-block\n      width: auto\n      a\n        display: inline-block\n        width: auto\n        max-width: none\n        margin: 0\n      a:before, a:after\n        content: none\n    .menu\n      right: 0\n\n  +between(441px, 625px)\n    .logo a\n      padding: 0 20px\n    .menu\n      padding-left: 8px\n      double-border(6px, header-height+2, #FFF)\n      &:after\n        content: none\n\n  +below(440px)\n    .logo a\n      padding: 0 55px 0 10px\n    .menu .menu-btn\n      .text\n        display: none\n      .icon\n        margin-left: 0\n\n\n#sidenav\n  fixed: top 51px right bottom\n  width: 300px\n  margin-right: -300px\n  z-index: 600\n  background-color: rgba(0,0,0,0.9)\n  overflow-y: auto\n  \n  +below(300px)\n    position: static\n    margin-top: header-height+1\n    width: auto\n  \n  &.hidden\n    display: none\n\n  .close\n    float: right\n    margin: 10px\n    a\n      display: block\n      size: 50px\n      background: url('../img/gallery/times-circle.svg') no-repeat\n      background-size: 100%\n\n  ul\n    clearfix()\n    text-align: center\n    list-style: none\n    margin: 0\n    padding: 0\n    li\n      box-sizing: border-box\n      border-bottom: 1px solid #FFF\n      border-left: 1px solid #FFF\n      /*+above(441px)\n        col(1/2, cycle: 2, gutter: 0)\n        &:nth-child(odd)\n          border-right: 1px solid #FFF*/\n    a\n      display: block\n      padding: 30px 0\n      color: #FFF\n      font-family: raleway\n      font-size: 1.25em\n      font-weight: bold\n      letter-spacing: 1px\n      text-transform: uppercase\n      &:hover\n        text-decoration: underline\n\n\n.page-head\n  clearfix()\n  padding: 70px 35px 0 35px\n  margin-bottom: 15px\n  \n  h1\n    font-family: raleway\n    font-size: 4em\n    font-weight: normal\n    letter-spacing: 2px\n    color: #A3A6AC\n    text-transform: uppercase\n    \n    margin: 0 0 10px\n    padding-bottom: 10px\n    float: left\n    position: relative\n    &:before\n      content: \"\"\n      size: 150px 10px\n      background-color: #E5E5E5\n      absolute: bottom left 8px\n    \n    +below(400px)\n      font-size: 3em\n      &:before\n        size: 125px 7.5px\n\n  .filter\n    float: right\n    display: inline-block\n    position: relative\n    \n    text-align: center\n    text-transform: uppercase\n    font-weight: 500\n    letter-spacing: 1px\n    a\n      color: font-light-color\n      font-size: 0.95em\n      letter-spacing: 2px\n      vertical-align: bottom\n\n    .box\n      border: 1px solid #E5E5E5\n      padding: 0 10px\n      min-width: 80px\n      line-height: 50px\n      height: 50px\n      display: inline-block\n\n    .box + .box\n      margin-left: -1px\n      \n    ol, ul\n      list-style: none\n      margin: 0 0 0 -11px\n      padding: 0\n      position: absolute\n      z-index 300\n      background-color: #FFF\n      border: 1px solid #E5E5E5\n      box-sizing: border-box\n      &.hidden\n        display: none\n      li\n        border-bottom: 1px solid #E5E5E5\n        &:last-child\n          border-bottom: 0 none\n      a\n        display: block\n        width: 100px\n        line-height: 30px\n","// helper\n\n-pos(type, args)\n  i = 0\n  position: unquote(type)\n  for j in (1..4)\n    if length(args) > i\n      {args[i]}: args[i + 1] is a 'unit' ? args[i += 1] : 0\n    i += 1\n\n/*\n * Position utility.\n *\n * Synopsis:\n *\n *   fixed: <pos> [n] <pos> [n]\n *\n * Examples:\n *\n *     fixed: top left\n *     fixed: top 5px left\n *     fixed: top left 5px\n *     fixed: top 5px left 5px\n *\n */\n\nfixed()\n  -pos('fixed', arguments)\n\n/*\n * Position utility.\n *\n * Synopsis:\n *\n *   absolute: <pos> [n] <pos> [n]\n *\n * Examples:\n *\n *     absolute: top left\n *     absolute: top 5px left\n *     absolute: top left 5px\n *     absolute: top 5px left 5px\n *\n */\n\nabsolute()\n  -pos('absolute', arguments)\n\n/*\n * Position utility.\n *\n * Synopsis:\n *\n *   relative: <pos> [n] <pos> [n]\n *\n * Examples:\n *\n *     relative: top left\n *     relative: top 5px left\n *     relative: top left 5px\n *     relative: top 5px left 5px\n *\n */\n\nrelative()\n  -pos('relative', arguments)\n","/*\n * Size utility.\n *\n * Synopsis:\n *\n *   size: <width> <height> | <width & height>\n *\n * Examples:\n *\n *     size: 100% 30px\n *       yields:\n *         width: 100%\n *         height: 30px\n *\n *     size: 5px\n *       yields:\n *         width: 5px\n *         height: 5px\n *\n */\n\nsize()\n  if length(arguments) == 1\n    width: arguments[0]\n    height: arguments[0]\n  else\n    width: arguments[0]\n    height: arguments[1]\n","// ------\n// Vendor\n// ------\n\n// Utilities specifically intended for helping with vendor-prefixed\n// css properties\n\n// Alias: Transition\n//\n// Transition with an intelligent default.\n//\n// ex. transition()\n// ex. transition: color 1s ease\n// ex. transition(color 1s ease, background 2.4s linear)\n\n//Cache nib transition mixin.\n_transition = transition\n\ntransition()\n  arguments = unquote('all .3s ease') unless arguments\n  _transition: arguments\n\n\n// Alias: Box Shadow\n//\n// Box shadow with pie support, if you are using it.\n//\n// ex. box-shadow: 1px 1px 3px blue\n// ex. box-shadow(1px 1px 3px blue, inset 2px 0 5px rgba(0,0,0,.5))\n\nbox-shadow()\n  box-shadow: arguments\n  pie()\n\n// Alias: Border Radius\n//\n// Border-radius with pie support, if you are using it.\n//\n// ex. +round-corners(5px)\n\nborder-radius()\n  border-radius: arguments\n  pie()\n\n// Alias: Opacity\n//\n// I know, it seems silly. But every time you go to old IE testing you will be\n// thanking yourself for using this instead of the normal opacity declaration.\n// Overrides default opacity.\n//\n// ex. opacity: .6\n\nopacity(opacity, args...)\n  \n  if args  \n    filter: s(\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\", opacity * 100 args) if support-for-ie  \n  else\n    filter: s(\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\", opacity * 100) if support-for-ie  \n    \n  opacity: opacity args\n\n// Alias: Border Box\n// A quicker way to specify border-box sizing.\n\nborder-box()\n  box-sizing: border-box\n\n// Alises: background-appearance-x and y\n//\n// In case you want to use an unsupported background-position property, this\n// should set you straight!\n\nbackground-position-x(x)\n  background-position: x 0\n\nbackground-position-y(y)\n  background-position: 0 y\n\n// Mixin: Opentype ligatures\n//\n// The vast majority of fonts contain lowercase and uppercase alphabets,\n// numerals, punctuation and accents. // Many professionally-designed fonts\n// also contain ligatures, alternative characters, smallcaps, different kinds of\n// numbers, and sometimes much more besides. This enables it.\n//\n// Source: http://www.newnet-soft.com/blog/csstypography\n// Additional: http://blog.fontdeck.com/post/15777165734/opentype-1\n\nopenTypeLigatures()\n  -moz-font-feature-settings:    \"liga=1, dlig=1\"\n  -ms-font-feature-settings:     \"liga\", \"dlig\"\n  -webkit-font-feature-settings: \"liga\", \"dlig\"\n  -o-font-feature-settings:      \"liga\", \"dlig\"\n  font-feature-settings:         \"liga\", \"dlig\"\n","// font stacks\nhelvetica-neue = \"Helvetica Neue\", HelveticaNeue, Helvetica, Arial, sans-serif\nhelvetica = \"Helvetica Neue\", Helvetica, Arial, sans-serif\ngeorgia = Georgia, Cambria, \"Times New Roman\", Times, serif\nlucidia-grande = \"Lucida Grande\", Tahoma, Verdana, Arial, sans-serif\nmonospace = unquote(\"'Bitstream Vera Sans Mono', Consolas, Courier, monospace\")\nverdana = Verdana, Geneva, sans-serif\nraleway = \"Raleway\", sans-serif\nfreight-sans = \"freight-sans-pro\", helvetica-neue\n\n// default font settings\nfont-stack = freight-sans\nfont-size = 16\nfont-color = #000\nfont-light-color = #4D4D4D // rgba(0,0,0,0.7) on white\n\nheader-height = 50px\n\ndouble-border(width, height, color)\n  &:before, &:after\n    position: absolute\n    content: \"\"\n    size: width height\n    border: 1px solid\n    if color\n      border-color: color\n    border-width: 0 1px 0 1px\n  &:before\n    left: 0\n  &:after\n    right: 0\n","/*\n * The Magnificent Micro Clearfix\n *\n * Useful for clearing floats without structural markup.\n * Prevents margin-collapsing on child elements in most cases.\n *\n * Known issues:\n *\n * 1. For IE 6/7 when applied to an element that contains only left-floated\n *    children the bottom margin on child elements will be collapsed.\n *\n * 2. For Firefox versions prior to 3.5 when applied to the first child element\n *    of body, and the element does not have non-zero padding, extra space will\n *    appear between the body and the first child.\n *\n * See http://nicolasgallagher.com/micro-clearfix-hack/\n * and http://j.mp/bestclearfix\n *\n */\n\nclearfix()\n  &:before\n  &:after\n    content: \"\"\n    display: table\n  &:after\n    clear: both\n  zoom: 1 if support-for-ie\n","#footer\n  clear: both\n  padding: 15px 0 15px\n  text-align: center\n  letter-spacing: 2px\n  color: font-light-color\n  font-weight: 500\n  font-size: 0.75em"]}